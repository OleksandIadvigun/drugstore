version: '2.1'
networks:
  drugstore:
    name: drugstore
    driver: bridge
services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.6.6-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks: [ drugstore ]
  db_product:
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 12810241024 # 128 mb = 128 * 1024 * 1024
    container_name: db_product
    image: mysql:8.0.26
    restart: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: db_product
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    ports: [ '13008:3306' ]
    networks: [ drugstore ]
    healthcheck:
      retries: 20
      timeout: 40s
      interval: 10s
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "$$MYSQL_USER", "--password=$$MYSQL_PASSWORD" ]
  product-service:
    container_name: product
    restart: on-failure
    image: drugstore/product-service
    build:
      context: ../product/product-service/
      dockerfile: ./Dockerfile
    ports: [ '8081:8081' ]
    networks: [ drugstore ]
    depends_on:
      db_product:
        condition: service_healthy
  db_order:
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 12810241024 # 128 mb = 128 * 1024 * 1024
    container_name: db_order
    image: mysql:8.0.26
    restart: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: db_order
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    ports: [ "13017:3306" ]
    networks: [ drugstore ]
    healthcheck:
      retries: 20
      timeout: 40s
      interval: 10s
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "$$MYSQL_USER", "--password=$$MYSQL_PASSWORD" ]
  order-service:
    container_name: order
    image: drugstore/order-service
    restart: on-failure
    build:
      context: ../order/order-service/
      dockerfile: ./Dockerfile
    ports: [ '8082:8082' ]
    networks: [ drugstore ]
    depends_on:
      db_order:
        condition: service_healthy
  db_store:
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 12810241024 # 128 mb = 128 * 1024 * 1024
    container_name: db_store
    image: mysql:8.0.26
    restart: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: db_store
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    ports: [ "13029:3306" ]
    networks: [ drugstore ]
    healthcheck:
      retries: 20
      timeout: 40s
      interval: 10s
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "$$MYSQL_USER", "--password=$$MYSQL_PASSWORD" ]
  store-service:
    container_name: store
    restart: on-failure
    image: drugstore/store-service
    build:
      context: ../store/store-service/
      dockerfile: ./Dockerfile
    ports: [ '8083:8083' ]
    networks: [ drugstore ]
    depends_on:
      db_store:
        condition: service_healthy
  db_accountancy:
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 12810241024 # 128 mb = 128 * 1024 * 1024
    container_name: db_accountancy
    image: mysql:8.0.26
    restart: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: db_accountancy
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    ports: [ "13020:3306" ]
    networks: [ drugstore ]
    healthcheck:
      retries: 20
      timeout: 40s
      interval: 10s
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "$$MYSQL_USER", "--password=$$MYSQL_PASSWORD" ]
  accountancy-service:
    container_name: accountancy
    restart: on-failure
    image: drugstore/accountancy-service
    build:
      context: ../accountancy/accountancy-service/
      dockerfile: ./Dockerfile
    ports: [ '8084:8084' ]
    networks: [ drugstore ]
    depends_on:
      rabbitmq:
        condition: service_started
      db_accountancy:
        condition: service_healthy
  web:
    image: library/nginx:1.18
    container_name: web
    ports:
      - "80:80"
    links:
      - accountancy-service
      - product-service
      - order-service
      - store-service
    restart: on-failure
    networks: [ drugstore ]
    volumes:
      - ../fe:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf