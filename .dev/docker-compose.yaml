version: '2.1'
networks:
  drugstore:
    name: drugstore
    driver: bridge
services:
  rabbitmq:
    extends:
      service: rabbitmq
      file: backing-services.yaml
  db_product:
    extends:
      service: db_product
      file: backing-services.yaml
  product-service:
    container_name: product
    restart: on-failure
    image: drugstore/product-service
    build:
      context: ../product/product-service/
      dockerfile: ./Dockerfile
    ports: [ '8081:8081' ]
    networks: [ drugstore ]
    depends_on:
      rabbitmq:
        condition: service_started
      db_product:
        condition: service_healthy
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_DATASOURCE_HOST: db_product
      SPRING_DATASOURCE_PORT: 3306
  db_order:
    extends:
      service: db_order
      file: backing-services.yaml
  order-service:
    container_name: order
    image: drugstore/order-service
    restart: on-failure
    build:
      context: ../order/order-service/
      dockerfile: ./Dockerfile
    ports: [ '8082:8082' ]
    networks: [ drugstore ]
    depends_on:
      rabbitmq:
        condition: service_started
      db_order:
        condition: service_healthy
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_DATASOURCE_HOST: db_order
      SPRING_DATASOURCE_PORT: 3306
  db_store:
    extends:
      service: db_store
      file: backing-services.yaml
  store-service:
    container_name: store
    restart: on-failure
    image: drugstore/store-service
    build:
      context: ../store/store-service/
      dockerfile: ./Dockerfile
    ports: [ '8083:8083' ]
    networks: [ drugstore ]
    depends_on:
      db_store:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_HOST: db_store
      SPRING_DATASOURCE_PORT: 3306
  db_accountancy:
    extends:
      service: db_accountancy
      file: backing-services.yaml
  accountancy-service:
    container_name: accountancy
    restart: on-failure
    image: drugstore/accountancy-service
    build:
      context: ../accountancy/accountancy-service/
      dockerfile: ./Dockerfile
    ports: [ '8084:8084' ]
    networks: [ drugstore ]
    depends_on:
      rabbitmq:
        condition: service_started
      db_accountancy:
        condition: service_healthy
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_DATASOURCE_HOST: db_accountancy
      SPRING_DATASOURCE_PORT: 3306
  web:
    image: library/nginx:1.18
    container_name: web
    ports:
      - "80:80"
    links:
      - accountancy-service
      - product-service
      - order-service
      - store-service
    restart: on-failure
    networks: [ drugstore ]
    volumes:
      - ../fe:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
